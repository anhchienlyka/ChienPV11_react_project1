{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useSession = (keyName, defaultValue = null) => {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const value = window.sessionStorage.getItem(keyName);\n\n      if (value) {\n        return JSON.parse(value);\n      }\n\n      window.sessionStorage.setItem(keyName, JSON.stringify(defaultValue));\n      return defaultValue;\n    } catch (err) {\n      return defaultValue;\n    }\n  });\n\n  const setValue = newValue => {\n    try {\n      window.sessionStorage.setItem(keyName, JSON.stringify(newValue));\n    } catch (err) {\n      alert(err);\n    }\n\n    setStoredValue(newValue);\n  };\n\n  return [storedValue, setValue];\n};\n\n_s(useSession, \"sT/QUIf4K2XjfI9BzQIE795tQD0=\");\n\nexport default useSession;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/ChienPV11_react_project1/src/hooks/useSession.tsx"],"names":["useState","useSession","keyName","defaultValue","storedValue","setStoredValue","value","window","sessionStorage","getItem","JSON","parse","setItem","stringify","err","setValue","newValue","alert"],"mappings":";;AAAA,SAAUA,QAAV,QAA0B,OAA1B;;AAEA,MAAMC,UAAU,GAAG,CAACC,OAAD,EAAkBC,YAAiB,GAAG,IAAtC,KAA+C;AAAA;;AAChE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAM;AACnD,QAAI;AACF,YAAMM,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8BP,OAA9B,CAAd;;AAEA,UAAII,KAAJ,EAAW;AACT,eAAOI,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAP;AACD;;AACDC,MAAAA,MAAM,CAACC,cAAP,CAAsBI,OAAtB,CAA8BV,OAA9B,EAAuCQ,IAAI,CAACG,SAAL,CAAeV,YAAf,CAAvC;AACA,aAAOA,YAAP;AACD,KARD,CAQE,OAAOW,GAAP,EAAY;AACZ,aAAOX,YAAP;AACD;AACF,GAZ6C,CAA9C;;AAcA,QAAMY,QAAQ,GAAIC,QAAD,IAAmB;AAClC,QAAI;AACFT,MAAAA,MAAM,CAACC,cAAP,CAAsBI,OAAtB,CAA8BV,OAA9B,EAAuCQ,IAAI,CAACG,SAAL,CAAeG,QAAf,CAAvC;AACD,KAFD,CAEE,OAAOF,GAAP,EAAY;AACZG,MAAAA,KAAK,CAACH,GAAD,CAAL;AACD;;AACDT,IAAAA,cAAc,CAACW,QAAD,CAAd;AACD,GAPD;;AASA,SAAO,CAACZ,WAAD,EAAcW,QAAd,CAAP;AACD,CAzBD;;GAAMd,U;;AA0BN,eAAeA,UAAf","sourcesContent":["import  { useState } from \"react\";\r\n\r\nconst useSession = (keyName: string, defaultValue: any = null) => {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const value = window.sessionStorage.getItem(keyName);\r\n\r\n      if (value) {\r\n        return JSON.parse(value);\r\n      }\r\n      window.sessionStorage.setItem(keyName, JSON.stringify(defaultValue));\r\n      return defaultValue;\r\n    } catch (err) {\r\n      return defaultValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (newValue: any) => {\r\n    try {\r\n      window.sessionStorage.setItem(keyName, JSON.stringify(newValue));\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n    setStoredValue(newValue);\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n};\r\nexport default useSession;\r\n"]},"metadata":{},"sourceType":"module"}